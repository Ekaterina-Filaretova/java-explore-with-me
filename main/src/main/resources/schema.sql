ALTER TABLE requests ALTER COLUMN request_id RESTART WITH 1;
ALTER TABLE events ALTER COLUMN event_id RESTART WITH 1;
DELETE FROM subscriptions cascade;
delete from events;
delete from categories;
DELETE FROM users cascade;
ALTER TABLE users ALTER COLUMN user_id RESTART WITH 1;
ALTER TABLE categories ALTER COLUMN category_id RESTART WITH 1;
ALTER TABLE compilations ALTER COLUMN compilation_id RESTART WITH 1;
ALTER TABLE subscriptions ALTER COLUMN subscription_id RESTART WITH 1;

CREATE TABLE IF NOT EXISTS categories (
    category_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(50) UNIQUE,
    CONSTRAINT category_id_pkey PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100),
    email varchar(50) UNIQUE,
    is_followed BOOLEAN,
    CONSTRAINT user_id_pkey PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS locations (
    location_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    latitude numeric,
    longitude numeric,
    CONSTRAINT location_id_pkey PRIMARY KEY (location_id)
);

CREATE TABLE IF NOT EXISTS events (
    event_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    annotation varchar(2000),
    category_id INTEGER NOT NULL REFERENCES categories(category_id) ON UPDATE CASCADE,
    confirmed_requests INTEGER,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description varchar(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id INTEGER NOT NULL REFERENCES users(user_id),
    location_id INTEGER NOT NULL REFERENCES locations(location_id),
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state varchar(50),
    title varchar(100),
    views INTEGER,
    CONSTRAINT event_id_pkey PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    pinned BOOLEAN,
    title varchar(100),
    CONSTRAINT compilation_id_pkey PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS compilation_event (
    event_id INTEGER NOT NULL REFERENCES events(event_id) ON UPDATE CASCADE,
    compilation_id INTEGER NOT NULL REFERENCES compilations(compilation_id) ON UPDATE CASCADE,
    CONSTRAINT compilation_event_pkey PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS requests (
    request_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    event_id INTEGER NOT NULL REFERENCES events(event_id),
    requester_id INTEGER NOT NULL REFERENCES users(user_id),
    status varchar(50),
    CONSTRAINT request_id_pkey PRIMARY KEY (request_id)
);

CREATE UNIQUE INDEX IF NOT EXISTS uidx_event_id_requester_id
ON requests(event_id, requester_id);

CREATE TABLE IF NOT EXISTS subscriptions (
    subscription_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    subscriber_id INTEGER NOT NULL REFERENCES users(user_id),
    followed_id INTEGER NOT NULL REFERENCES users(user_id),
    subscribe_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT subscription_id_pkey PRIMARY KEY (subscription_id)
);

CREATE UNIQUE INDEX IF NOT EXISTS uidx_subscriber_id_followed_id
ON subscriptions(subscriber_id, followed_id);